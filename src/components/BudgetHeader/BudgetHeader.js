import React from 'react';
import { connect } from 'react-redux';
import './budget-header.css';
import { Link } from 'react-router-dom';
import { userActions } from '../../_actions';

class BudgetHeader extends React.Component {
  componentDidMount() {
    console.log(this.props);
    this.props.dispatch(userActions.getAll());
  }

  render() {
    const { user, users, categories } = this.props;
    const numItems = categories.length || 0;
    const total = categories.reduce(function(sum, current) {
      return sum + current.categoryTotal;
    }, 0);
    return (
      <header className="budget-header row">
        <Link to="/home">
          <div className="logo text-dark">
            <svg width="141.53" height="30.03" viewBox="0 0 849.2 180.2">
              <g>
                <path
                  fill="#f57d14"
                  fillRule="nonzero"
                  id="path22"
                  d="m108.89626,132.185l87.74625,0l0,-130.0875l-87.74625,130.0875"
                />
                <path
                  fill="#ed451e"
                  fillRule="nonzero"
                  id="path24"
                  d="m0,0.00125l0,132.18375l196.64251,-132.18375l-196.64251,0"
                />
                <path
                  fill="#202d59"
                  fillRule="nonzero"
                  id="path26"
                  d="m270.685,54.30999c3.98499,0 10.43124,-0.23752 14.21875,-2.05627c5.73001,-3.14124 7.55624,-8.0625 7.55624,-15.53375c0,-8.03626 -4.8425,-12.79248 -8.91125,-14.69873c-3.10748,-1.57001 -7.1225,-2.23499 -13.38748,-2.23499l-18.34,0l0,34.52374l18.86374,0zm3.58499,58.05749c5.70251,0 10.14127,-0.67377 13.61377,-2.06876c7.11624,-3.19501 11.36499,-9.01251 11.51624,-17.51126c0,-8.11124 -4.55624,-14.32623 -11.5275,-17.31125c-5.02875,-2.09375 -9.14749,-2.245 -15.35126,-2.245l-20.69998,0l0,39.13626l22.44873,0zm-44.52499,19.81623l0,-132.18247l45.87,0c17.85001,0 39.41501,9.40372 39.41501,34.25373c0,14.84378 -6.95126,24.37125 -13.20377,27.92126c16.81876,6.45874 20.10876,22.44 20.10876,31.85873c0,21.125 -17.42001,38.14875 -45.125,38.14875l-47.065,0zm192.72504,-48.90376l0,-50.7225l-21.71503,0l0,50.7225c0,18.035 -9.22876,29.67627 -23.68124,29.67627c-14.41251,0 -23.64127,-11.64124 -23.64127,-29.67627l0,-50.7225l-21.7525,0l0,50.7225c0,30.26877 20.17627,49.62251 45.39377,49.62251c25.26126,0 45.39627,-19.35374 45.39627,-49.62251zm60.3537,-32.83749c-15.625,0 -27.84497,13.80001 -27.84497,31.45626c0,17.13248 12.45001,31.03372 27.84497,31.03372c15.26251,0 28.16504,-14.19626 28.16504,-31.03372c0,-17.34375 -12.64624,-31.45626 -28.16504,-31.45626zm0,82.46c-27.78375,0 -49.6087,-22.18623 -49.6087,-51.18998c0,-29.10751 21.82495,-51.39252 49.6087,-51.39252c10.13,0 20.34753,3.67374 28.16504,10.74124l0,-41.06125l21.69501,0l0,130.86875l-21.15625,0l0,-9.16376c-7.76752,7.36378 -18.17255,11.19752 -28.7038,11.19752l0,0zm111.48254,-20.00001c-15.6225,0 -27.84375,-13.91998 -27.84375,-31.5625c0,-17.14374 12.45624,-31.04748 27.84375,-31.04748c15.26123,0 28.1637,14.19622 28.1637,31.04748c0,17.32877 -12.64746,31.5625 -28.1637,31.5625zm28.70123,-80.345l0,8.96375c-7.76501,-7.36249 -18.17126,-11.20249 -28.70123,-11.20249c-27.78375,0 -49.5675,22.185 -49.5675,51.20502c0,29.09875 21.78375,51.38374 49.5675,51.38374c10.1275,0 20.34747,-3.67874 28.1637,-10.7425c0,0 4.39001,37.52488 -28.69873,37.52488c-13.95123,0 -23.79749,-10.021 -28.21997,-17.57225c0.00623,0 -17.34875,12.19 -17.34875,12.19c8.52625,15.92625 26.57751,25.69238 45.56873,25.69238c12.77625,0 25.34253,-3.625 34.27625,-11.4575c10.48999,-9.25638 16.24377,-22.13239 16.24377,-39.49127l0,-96.49375l-21.28375,0zm55.6825,39.88501c0.78625,-5.88251 7.91876,-22.29373 25.65002,-22.29373c17.19873,0 24.73499,15.90371 25.40869,22.29373l-51.05872,0zm59.83252,-28.20626c-9.05505,-9.49622 -21.35626,-13.91248 -34.2088,-13.91248c-27.46625,0 -48.6225,22.81751 -48.6225,51.47998c0,28.94 20.69379,51.09876 49.1413,51.09876c14.97247,0 30.11249,-7.76499 39.39624,-19.63374l-16.94128,-11.875c-5.57123,7.65997 -15.03748,11.67874 -22.45496,11.67874c-11.60626,0 -23.41876,-8.28876 -26.3175,-22.54126l72.78125,0c0,0 6.64624,-25.91498 -12.77374,-46.29501zm62.4425,68.81378c-11.03253,0 -16.16254,-5.38 -16.16254,-16.97003l0,-44.32998l21.20374,0l0,-19.1925l-21.20374,0l0,-27.46124l-21.69751,0l0,90.98373c0,23.02875 13.19501,36.82252 34.44629,36.82252c4.42999,0 8.81622,-0.63873 8.81622,-0.63873l0,-19.48252c-2.72498,0.23251 -4.26752,0.26877 -5.40247,0.26877zm33.82874,-95.10126c1.59375,0 3.435,-0.43127 3.435,-2.33875c0,-1.71753 -1.64752,-2.15002 -3.13251,-2.15002l-2.58502,0l0,4.48877l2.28253,0zm-5.10376,-6.88501l5.53375,0c2.94623,0 5.84247,1.23126 5.84247,4.60999c0,2.27502 -1.41498,3.7525 -3.6275,4.24252l4.23254,6.88123l-3.4425,0l-3.67999,-6.57623l-2.03754,0l0,6.57623l-2.82123,0l0,-15.73373zm5.46997,19.73627c6.51129,0 11.79626,-5.35376 11.79626,-11.8075c0,-6.51376 -5.28497,-11.80002 -11.79626,-11.80002c-6.50873,0 -11.80621,5.28625 -11.80621,11.80002c0,6.45374 5.29749,11.8075 11.80621,11.8075zm0,-25.75876c7.74005,0 14.01379,6.20874 14.01379,13.95126c0,7.74371 -6.27374,13.82999 -14.01379,13.82999c-7.74249,0 -14.01624,-6.08628 -14.01624,-13.82999c0,-7.74252 6.27374,-13.95126 14.01624,-13.95126"
                />
              </g>
            </svg>
          </div>
        </Link>
        <div className="d-flex" style={{ display: 'flex' }}>
          <h1>Hi {user.firstName}!</h1>
          <p>You're logged in with React & JWT!!</p>
          {/* <h3>Users from secure api end point:</h3>
          {users.loading && <em>Loading users...</em>}
          {users.error && <span className="text-danger">ERROR: {users.error}</span>}
          {users.items && (
            <ul>
              {users.items.map((user, index) => (
                <li key={user.id}>{user.firstName + ' ' + user.lastName}</li>
              ))}
            </ul>
          )} */}
          <p>
            <Link to="/login">Logout</Link>
          </p>
        </div>
        <div className="categories-info">
          {numItems} categories (${total})
        </div>
      </header>
    );
  }
}

const mapStateToProps = state => {
  const {
    users,
    authentication: { user },
    categoriesList: { categories }
  } = state;
  return {
    user,
    users,
    categories
  };
};

export default connect(mapStateToProps)(BudgetHeader);
